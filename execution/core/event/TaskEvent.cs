/**
 * A TaskEvent is an event that is generated by tasks ({@link ExecutionTask}) to
 * signal that a relevant change in the status of a task has taken place.
 * 
 * @author Ricardo Juan Palma Durán
 * 
 */

using System;

namespace DisciplineOak.Execution.Core.@event
{
	public class TaskEvent : EventArgs
	{
		/** The new status of the task. */
		private readonly ExecutionTask _source;
		private readonly Status newStatus;
		/** The previous status of the task. */
		private readonly Status previousStatus;

		/**
	 * Creates a TaskEvent with a particular ExcutionTask as source of the
	 * event. The source (<code>source</code>) is the task whose status has
	 * changed, and <code>newStatus</code> is the new status of the task.
	 * 
	 * @param source
	 *            the task whose status has changed.
	 * @param newStatus
	 *            the new status of the task.
	 */

		public TaskEvent(ExecutionTask source, Status newStatus, Status previousStatus)
		{
			_source = source;
			this.newStatus = newStatus;
			this.previousStatus = previousStatus;
		}

		/**
	 * Returns the new status associated to the task.
	 * 
	 * @return the new status associated to the task.
	 */

		public Status getNewStatus()
		{
			return newStatus;
		}

		/**
	 * Returns the previous status associated to the task.
	 * 
	 * @return the previous status associated to the task.
	 */

		public Status getPreviousStatus()
		{
			return previousStatus;
		}
	}
}